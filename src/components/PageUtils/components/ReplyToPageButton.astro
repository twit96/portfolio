---
import { CONTACT_EMAIL } from '@consts';
---
<a
  class="btn shadow-sm"
  href={`mailto:${CONTACT_EMAIL}?subject=Re: ${Astro.url.href}`}
  id="reply-to-page-btn"
  target="_blank"
  rel="noopener noreferrer"
  style="--_gap:0.25rem;"
  title={`Reply via Email to ${CONTACT_EMAIL}`}
>
  <svg
    height="1.5rem"
    viewBox="0 0 512 512"
    width="1.5rem"
    xmlns="http://www.w3.org/2000/svg"
  >
    <!--! Font Awesome Pro 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
    <path d="M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z"></path>
  </svg>
  <span>Reply</span>
</a>


<style>
  a {
    background: var(--link);
    color: var(--surface1);
    display: none;
    font-size: 0.9rem;
    align-items: center;
    gap: 1ch;
  }
  a[data-state="displayed"] { display: flex; }
  svg {
    --size: 1.5rem;
    fill: var(--surface1);
    height: var(--size);
    width: var(--size);
  }
</style>


<script>
  function configReplyToPageBtn() {

    let replyBtn = document.getElementById("reply-to-page-btn");
    if (!replyBtn) return false;

    function updateBtn() {
      if (replyBtn) {
        // get scroll percentage
        const triggerPercent = 95;
        const scrollTop = document.documentElement.scrollTop;
        const docHeight = document.documentElement.offsetHeight;
        const winHeight = window.innerHeight;
        const scrollPercent = (docHeight===winHeight) ? 100 : (scrollTop / (docHeight - winHeight)) * 100;

        // get state
        const past_trigger = scrollPercent > triggerPercent;
        const is_displayed = replyBtn.dataset.state==="displayed";

        // update state
        if (past_trigger !== is_displayed) {
          // past trigger and not displayed or before trigger and is displayed
          replyBtn.dataset.state = is_displayed ? "" : "displayed";
        }
      }
    }
    updateBtn();

    /**
     * Throttle:
     * Fire a function once every set number of milliseconds
     * during a burst of calls.
     * 
     * (Fires at the end of each timeout period instead of the beginning
     * to ensure bursts shorter than the timeout delay will trigger a fire).
    */
    const throttle = (func, delay) => {
      let inProgress = false;
      return (...args) => {
        if (inProgress) {
          return;
        }
        inProgress = true;
        setTimeout(() => {
          func(...args);
          inProgress = false;
        }, delay);
      }
    };

    // Manage Scroll Top Btn State
    window.addEventListener('scroll', throttle(() => {
      updateBtn();
    }, 100), false);

  }
  configReplyToPageBtn();
</script>
