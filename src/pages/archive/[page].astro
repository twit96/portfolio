---
import { getCollection } from 'astro:content';
import PostCollectionLayout from '@layouts/PostCollectionLayout.astro';
import { POSTS_PER_PAGE } from '@consts';
import NothingHereCard from '@components/PostPreviewCard/NothingHereCard.astro';
import CompactPreviewCard from '@components/PostPreviewCard/CompactPreviewCard.astro';
import PaginationButtons from '@components/PaginationButtons.astro';


export async function getStaticPaths({ paginate }) {
  
  // Get All Posts
	let publishedPosts = (await getCollection('posts')).filter(post => !post.data.draft && !post.data.archived);
  // Sort by Date Descending
  publishedPosts.sort(function(a, b) {
    let a_date = Date.parse(a.data.dateUpdated || a.data.datePublished);
    let b_date = Date.parse(b.data.dateUpdated || b.data.datePublished);
    if (b_date > a_date) return 1;
    if (a_date > b_date) return -1;
    return 0;
  });

  // Generate pages from our array of posts, with a set number to a page
  return paginate(publishedPosts, { pageSize: POSTS_PER_PAGE });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props;

---

<PostCollectionLayout
	title="Archive"
  description="Tyler Wittig's Posts"
  hasCategoriesNav={true}
  numPosts={page.total}
>
  <div
    slot="content"
    class="content-section"
  >

    {/* No Posts - Nothing Here Card */}
    {
      (page.data.length === 0) &&
      <NothingHereCard />
    }
    
    {/* Posts - Uniform Grid */}
    {
      page.data.length > 0 &&
      <ul class="layout layout--grid">
        {
          page.data.map((post, i) => (
            <li>
              <CompactPreviewCard post={post} />
            </li>
          ))
        }
      </ul>
    }
    
    <PaginationButtons
      page={page}
      baseUrl={Astro.url.pathname.split('/').filter(Boolean).slice(0,-1).join('/')}
    />

  </div>

</PostCollectionLayout>
